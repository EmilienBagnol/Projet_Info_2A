import inquirer
from geopy.geocoders import Nominatim
from METIER.Utilisateur import Utilisateur

class Accueil:
    def show(self):
        questions = [
            inquirer.List(
                'menu',
                message="Sélectionnez une option :",
                choices=["Faire une recherche", "S'authentifier", "Créer un compte"],
            ),
        ]

        answers = inquirer.prompt(questions)
        selected_option = answers.get('menu', '').strip().lower()
        return selected_option


class Recherche:
    def transfo_adresse_GPS(self, adresse):
        # Demandez à l'utilisateur d'entrer une adresse
        address = str(adresse)

        # Créez un géocodeur avec le service Nominatim
        geocoder = Nominatim(user_agent="Mon application Python")

        # Géocodez l'adresse
        location = geocoder.geocode(address)

        # Obtenez les coordonnées GPS
        if location:
            latitude, longitude = location.latitude, location.longitude
            return latitude, longitude
        else:
            print("Adresse non trouvée.")
            return None

    def show(self):
        adresse = [
            inquirer.List(
                'recherche',
                message="Voulez-vous :",
                choices=["Entrer une adresse postale", "Entrer des coordonnées GPS", "Revenir à la page d'accueil"]
            ),
        ]

        answers = inquirer.prompt(adresse)
        selected_option_recherche = answers.get('recherche', '').strip().lower()

        if selected_option_recherche == "entrer une adresse postale":
            adresse_postale = input("Entrer l'adresse postale : ").strip()
            coordonnees_GPS = self.transfo_adresse_GPS(adresse_postale)

            if coordonnees_GPS:
                questions = [
                    inquirer.List(
                        'filtres',
                        message="Voulez-vous appliquer un filtre sur votre recherche ? :",
                        choices=["Non", "Oui"],
                    ),
                ]
                answers = inquirer.prompt(questions)
                selected_option = answers.get('filtres', '').strip().lower()
                return selected_option
            else:
                print("Coordonnées GPS non disponibles.")
                return None
            
        elif selected_option_recherche == "entrer des coordonnées gps":
            latitude = input("Entrer la latitude : ").strip()
            longitude = input("Entrer la longitude : ").strip()
            questions = [
                inquirer.List(
                    'filtres',
                    message="Voulez-vous appliquer un filtre sur votre recherche ? :",
                    choices=["Non", "Oui"],
                ),
            ]
            answers = inquirer.prompt(questions)
            selected_option = answers.get('filtres', '').strip().lower()
            return selected_option

        elif selected_option_recherche == "revenir à la page d'accueil":
            return 'accueil'


class Authentification:
    def __init__(self, utilisateurs):
        self.utilisateurs = utilisateurs
        self.utilisateur_actuel = None

    def authentifier(self):
        while True:
            identifiant = input("Entrer votre identifiant : ").strip()
            mot_de_passe = input("Entrer votre mot de passe : ").strip()

            utilisateur_trouve = next((utilisateur for utilisateur in self.utilisateurs if utilisateur.id_utilisateur == identifiant and utilisateur.mdp_utilisateur == mot_de_passe), None)

            if utilisateur_trouve:
                self.utilisateur_actuel = utilisateur_trouve
                print("Authentification réussie!")
                break
            else:
                print("Identifiant ou mot de passe incorrect. Veuillez réessayer.")


class CreationCompte:
    def show(self):
        identifiant = input("Entrer votre identifiant : ").strip()
        mot_de_passe = input("Entrer votre mot de passe : ").strip()


class ViewManager:
    def __init__(self):
        self.current_view = Accueil()

    def run(self):
        while True:
            user_input = self.current_view.show()

            if user_input == 'faire une recherche':
                self.current_view = Recherche()
            elif user_input == "s'authentifier":
                self.current_view = Authentification()
            elif user_input == 'créer un compte':
                self.current_view = CreationCompte()
            elif user_input == 'accueil':
                self.current_view = Accueil()
            else:
                print("Entrée invalide. Veuillez réessayer.")


if __name__ == "__main__":
    view_manager = ViewManager()
    view_manager.run()
